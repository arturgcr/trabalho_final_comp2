objeto usuario:
    carrinho de compras -> haje sobre o arquivo

não precisa de um objeto produto, so precisamos agir sobre o arquivo csv,
subtraindo as compras, mudando de estado caso esteja em estoque, adicionando
livros por parte dos administradores casos haja acrescrescimo no estoque

corrigir os elifs de casos onde o for percorre as linhas do arquivo csv (acho q estão corrigidos)

podemos fazer as datas em dia, mes e ano, geraqndo um grafico para o vendedor e o administrador com o
 eixo x de tempo, selecionando se ele seria mes, dia ou ano

#define o botão
#botao = Button(tela_de_login, text = "Carrinho", command = lambda: print("funciona"))
#exibe o botão na tela
#botao.pack()

#define um bloco de texto a ser exibido
#label = Label(tela_de_login, text = pd.read_csv('dataset_produtos/dataset_livros.csv').head())
#exibe o bloco de texto
#label.pack()


- criar cadastro de usuarios com parte gráfica:
    @ verificando se o email é repetido
    @ verificando se a senha atende os requisitos
    @ salvando as informações em um sqlt ou txt(tentei mas n sei como fazer pra acessar de uma forma descente) ou csv |(a decidir qual é melhor)

    email, nome, endereco, estado_usuario, senha
arturgcr78@gmail.com, artur, casa, administrador, senhadificil123

talvez criar o objeto produto para adcionar um botão a cada 
- talvez a ideia do objeto produto seja cmplicada, seria bom somente atrelar botões a textos impressos,
botando o nome do produto como o objeto botão
- n sei alterar os itens de um arquivo oq teria de fazer na classe usuario e no teste onde se cria oa botões

- with pd.option_context()

artur = Usuario("nome","endereco","senha","email","administrador")
artur.adiciona_produto_ao_carrinho("Soumission")
artur.adiciona_produto_ao_carrinho("Tipping the Velvet")
artur.remover_produto_do_carrinho("Soumission")
print(artur.carrinho_de_compras)
artur.realizar_compra()
print(artur.carrinho_de_compras)
#teste